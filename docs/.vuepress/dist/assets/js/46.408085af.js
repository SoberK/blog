(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{325:function(t,a,n){"use strict";n.r(a);var s=n(14),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#序列"}},[t._v("#")]),t._v(" 序列")]),t._v(" "),a("ul",[a("li",[t._v("range(start,end,step)\n"),a("ul",[a("li",[t._v("step 如果负数就是负增长")])])]),t._v(" "),a("li",[t._v("列表\n"),a("ul",[a("li",[t._v("创建\n"),a("ul",[a("li",[t._v("a = []")]),t._v(" "),a("li",[t._v("a = list(range(1,3,4,5,6))")])])])])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1212'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("212")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("推导式 [表达式 for 变量 in 列表]\n"),a("ul",[a("li",[t._v("[x*2 for x in range(5)]")]),t._v(" "),a("li",[t._v("[x*2 for x in range(100) if x%9==0]")])])]),t._v(" "),a("li",[t._v("元素增加\n"),a("ul",[a("li",[t._v("a.append() 也可以用+来操作")]),t._v(" "),a("li",[t._v("a.extend() 两个列表相加")]),t._v(" "),a("li",[t._v("insert(index,[]) 添加元素")])])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\nl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("元素删除\n"),a("ul",[a("li",[t._v("del a[index]")]),t._v(" "),a("li",[t._v("a.pop() 删除最后一个")]),t._v(" "),a("li",[t._v("a.pop(1) 删除指定")]),t._v(" "),a("li",[t._v('a.remove("nu") 删除指定元素')])])]),t._v(" "),a("li",[t._v("访问元素\n"),a("ul",[a("li",[t._v("a[index]")]),t._v(" "),a("li",[t._v("a.index(index)")])])]),t._v(" "),a("li",[t._v("a.count(i)元素出现的次数")]),t._v(" "),a("li",[t._v("len()")]),t._v(" "),a("li",[t._v("20 in a 返回是否存在于 a 中")]),t._v(" "),a("li",[t._v("20 not in a 返回是否存在于 a 中")]),t._v(" "),a("li",[t._v("切片操作（和字符串一样）")]),t._v(" "),a("li",[t._v("遍历\n"),a("ul",[a("li",[t._v("for x in a")])])]),t._v(" "),a("li",[t._v("排序\n"),a("ul",[a("li",[t._v("a.sort() 在原列表排序 升序")]),t._v(" "),a("li",[t._v("a.sort(reverse=True) 在原列表排序 降序")]),t._v(" "),a("li",[t._v("sorted(a) 在新列表排序 升序")]),t._v(" "),a("li",[t._v("sorted(a,reverse=True) 在新列表排序 降序")])])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\nl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(l.count(3))")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(20 in l)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(3 not in l)")]),t._v("\nl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reverse"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sorted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("计算相关\n"),a("ul",[a("li",[t._v("max() 获取最大")]),t._v(" "),a("li",[t._v("min() 获取最小")]),t._v(" "),a("li",[t._v("sum() 相加")])])]),t._v(" "),a("li",[t._v("元祖 是不可变序列\n"),a("ul",[a("li",[t._v("创建\n"),a("ul",[a("li",[t._v("a=(10,20)")]),t._v(" "),a("li",[t._v("a=10,20")]),t._v(" "),a("li",[t._v("tuple('abc')")])])]),t._v(" "),a("li",[t._v("访问 和列表一样")])])]),t._v(" "),a("li",[t._v("字典\n"),a("ul",[a("li",[t._v("创建\n"),a("ul",[a("li",[t._v("a = {'a':'b'}")]),t._v(" "),a("li",[t._v("a = dict(name='121')")]),t._v(" "),a("li",[t._v("arr = ['name','c','d'];arr2 = ['namevalue','cvalue','dvalue'];a = dict(zip(arr,arr2))")]),t._v(" "),a("li",[t._v("arr2 = ['namevalue','cvalue','dvalue'];a = dict.fromkeys(arr2)")])])]),t._v(" "),a("li",[t._v("访问元素\n"),a("ul",[a("li",[t._v("a['name'] ,不存在会报错，")]),t._v(" "),a("li",[t._v("a.get('name');a.get('name','default'); 如果不存在默认 none,第二个参数入默认值")]),t._v(" "),a("li",[t._v("a.items()")]),t._v(" "),a("li",[t._v("a.keys()")]),t._v(" "),a("li",[t._v("a.values()")]),t._v(" "),a("li",[t._v("len()")]),t._v(" "),a("li",[t._v("'name' in a 是否存在")])])]),t._v(" "),a("li",[t._v("修改值\n"),a("ul",[a("li",[t._v("a['name'] = '2121'")])])]),t._v(" "),a("li",[t._v("删除\n"),a("ul",[a("li",[t._v("del(a['name'])")]),t._v(" "),a("li",[t._v("a.pop('age')")])])]),t._v(" "),a("li",[t._v("解包"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   arr = ['name','c','d']\n   arr2 = ['namevalue','cvalue','dvalue']\n   a = dict(zip(arr,arr2))\n   # x,y,z = a.items();\n   # x,y,z = a.values();\n   x,y,z = a.keys();\n   print(x)\n   print(y)\n   print(z)\n")])])])])])]),t._v(" "),a("li",[t._v("集合 不能重复的数组\n"),a("ul",[a("li",[t._v("创建\n"),a("ul",[a("li",[t._v("a = {3,6,7}")]),t._v(" "),a("li",[t._v("a = set([1,2,3])")])])]),t._v(" "),a("li",[t._v("删除\n"),a("ul",[a("li",[t._v("a.remove(20)")])])]),t._v(" "),a("li",[t._v("集合操作\n"),a("ul",[a("li",[t._v("a | b 并集")]),t._v(" "),a("li",[t._v("a & b 交集")]),t._v(" "),a("li",[t._v("a - b 差集")])])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);