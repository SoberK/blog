(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{333:function(t,v,r){"use strict";r.r(v);var e=r(14),i=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"_1、v-if和v-for哪个优先级更高"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、v-if和v-for哪个优先级更高"}},[t._v("#")]),t._v(" 1、v-if和v-for哪个优先级更高")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("首先不应该把v-if和v-for放在一起")])]),t._v(" "),v("li",[v("p",[t._v("在vue2中 v-for的优先级高于v-if，把他们放在一起，输出的渲染函数中可以看出先会执行循环再执行判断条件，哪怕我么中渲染列表中一小部分元素，也可以再每次重渲染的时候遍历整个列表，这个会比较浪费，另外需要注意的是vue3中完全相反，v-if的优先级高于v-for，所以v-if执行时，他的调用变量还不存在，就会导致报错异常。")])]),t._v(" "),v("li",[v("p",[t._v("我们经常再循环的列表上面加一个"),v("code",[t._v("<template/>")])])])])])}),[],!1,null,null,null);v.default=i.exports}}]);