(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{329:function(e,v,t){"use strict";t.r(v);var i=t(14),l=Object(i.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"_23-vue3的设计目标和优化点有哪些"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_23-vue3的设计目标和优化点有哪些"}},[e._v("#")]),e._v(" 23.vue3的设计目标和优化点有哪些")]),e._v(" "),v("ul",[v("li",[e._v("易用性")]),e._v(" "),v("li",[e._v("性能")]),e._v(" "),v("li",[e._v("扩展性")]),e._v(" "),v("li",[e._v("可维护性")]),e._v(" "),v("li",[e._v("开发体验")])]),e._v(" "),v("ol",[v("li",[e._v("vue3的最大设计目标是替代vue2 （皮一下），为了实现这一点，vue3在以下几个方面做了很大改进，如：易用性、框架性能、扩展性、可维护性、开发体验等")]),e._v(" "),v("li",[e._v("易用性方面主要是AP1简化，比如 v-model在vue3中变成了vue2中 v-model’和’sync 修饰符的结合体，用户不用区分两者不同，也不用选择困难。类似的简化还有用于渲染函数数内部生成VNode的 h(type, props,children），其中 props°不用考虑区分属性、特性、事件等，框架替我们判断，易用性大增")]),e._v(" "),v("li",[e._v("开发体验方面，新组件 Teleport•传送门、 Fragments°、 suspense‘ 等都会简化特定场景的代码编写，SFC Composition API•语法糖更是极大提升我们开发体验。")]),e._v(" "),v("li",[e._v("扩展性方面提升如独立的‘reactivity°模块，custom renderer°AP等")]),e._v(" "),v("li",[e._v("可维护性方面主要是 Composition API’，更容易编写高复用性的业务逻辑。还有对TypeScript支持的提升。")]),e._v(" "),v("li",[e._v("性能方面的改进也很显著，例如编译期优化、基于 Proxy 的响应式系统")])])])}),[],!1,null,null,null);v.default=l.exports}}]);