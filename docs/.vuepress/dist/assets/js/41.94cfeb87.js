(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{323:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" mysql")]),t._v(" "),s("h2",{attrs:{id:"docker-安装-mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装-mysql"}},[t._v("#")]),t._v(" docker 安装 mysql")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("vim mysql/my.cnf")])]),t._v(" "),s("li",[t._v("写入内容")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mysqld"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mysql\ncharacter-set-server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("default_authentication_plugin")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mysql_native_password\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("secure_file_priv")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lib/mysql\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("expire_logs_days")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sql_mode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("max_connections")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault-character-set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault-character-set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8\n")])])]),s("ul",[s("li",[s("p",[s("code",[t._v("docker run --restart=always --privileged=true -d -v /opt/mysql/data/:/var/lib/mysql -v /opt/mysql/conf.d:/etc/mysql/conf.d -v /opt/mysql/my.cnf:/etc/mysql/my.cnf -p 33060:3306 --name my-mysql -e MYSQL_ROOT_PASSWORD=123456 mysql")])])]),t._v(" "),s("li",[s("p",[t._v("navicate 连接工具免费地址 https://github.com/yhan219/navicat_reset_mac")])])]),t._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("h2",{attrs:{id:"基础命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础命令"}},[t._v("#")]),t._v(" 基础命令")]),t._v(" "),s("h3",{attrs:{id:"登录登出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录登出"}},[t._v("#")]),t._v(" 登录登出")]),t._v(" "),s("ul",[s("li",[t._v("mysql -uroot -p")]),t._v(" "),s("li",[t._v("exit;")])]),t._v(" "),s("h3",{attrs:{id:"数据库操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作"}},[t._v("#")]),t._v(" 数据库操作")]),t._v(" "),s("ul",[s("li",[t._v("show databases; 查看所有表")]),t._v(" "),s("li",[t._v("create database python31 chartset=utf8; 创建数据库")]),t._v(" "),s("li",[t._v("use python31; 选中数据库")]),t._v(" "),s("li",[t._v("select database();查看选中的数据库")]),t._v(" "),s("li",[t._v("drop database python3; 删除数据库")])]),t._v(" "),s("h3",{attrs:{id:"表的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表的操作"}},[t._v("#")]),t._v(" 表的操作")]),t._v(" "),s("ul",[s("li",[t._v("创建表")]),t._v(" "),s("li",[t._v("desc tablename 查看表结构")]),t._v(" "),s("li",[t._v("show tables")]),t._v(" "),s("li",[t._v("alter table 表明 add 字段名 类型 添加字段名")]),t._v(" "),s("li",[t._v("alter table 表明 modify 字段名 类型 修改字段名")])]),t._v(" "),s("h3",{attrs:{id:"表类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表类型"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.runoob.com/mysql/mysql-data-types.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("表类型"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"表操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表操作"}},[t._v("#")]),t._v(" 表操作")]),t._v(" "),s("h4",{attrs:{id:"查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[t._v("#")]),t._v(" 查询")]),t._v(" "),s("p",[t._v("select * from tableName;\nselect name,nam2,name3 from tableName;")]),t._v(" "),s("h4",{attrs:{id:"插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入"}},[t._v("#")]),t._v(" 插入")]),t._v(" "),s("p",[t._v("insert into tableName (列明....) values (内容...);")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" student  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tall"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'关于'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.82")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'吕布'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("38")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.88")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'孙权'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.78")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'诸葛亮'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.62")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'嫂夫人'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.52")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改"}},[t._v("#")]),t._v(" 修改")]),t._v(" "),s("p",[t._v("update tablename set tablename=value,tablename2=value2 where 条件")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"删除语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除语句"}},[t._v("#")]),t._v(" 删除语句")]),t._v(" "),s("p",[t._v("delete from tablename where 条件")]),t._v(" "),s("h4",{attrs:{id:"as-和-distinct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-和-distinct"}},[t._v("#")]),t._v(" as 和 distinct")]),t._v(" "),s("ul",[s("li",[t._v("as 别名 或者空格 "),s("code",[t._v("SELECT * from student as s WHERE s.age>50")])]),t._v(" "),s("li",[t._v("distinct 去除重复行 "),s("code",[t._v("select distinct age,gender from student")])])]),t._v(" "),s("h4",{attrs:{id:"where-比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where-比较运算符"}},[t._v("#")]),t._v(" where 比较运算符")]),t._v(" "),s("ul",[s("li",[s("blockquote",[s("p",[t._v("、=、>=、<、<=、!=<>")])])])]),t._v(" "),s("h4",{attrs:{id:"where-逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where-逻辑运算符"}},[t._v("#")]),t._v(" where 逻辑运算符")]),t._v(" "),s("ul",[s("li",[t._v("and")]),t._v(" "),s("li",[t._v("or")]),t._v(" "),s("li",[t._v("not")])]),t._v(" "),s("h4",{attrs:{id:"where-like-模糊查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where-like-模糊查询"}},[t._v("#")]),t._v(" where like 模糊查询")]),t._v(" "),s("ul",[s("li",[t._v("name like '%sang'")]),t._v(" "),s("li",[t._v("name like 'sang%'")]),t._v(" "),s("li",[t._v("name like '%sang%'")])]),t._v(" "),s("h4",{attrs:{id:"where-between-and-和-in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where-between-and-和-in"}},[t._v("#")]),t._v(" where between...and...和 in")]),t._v(" "),s("ul",[s("li",[t._v("where id between 20 and 30;")]),t._v(" "),s("li",[t._v("where id in (3,4,6);")])]),t._v(" "),s("h4",{attrs:{id:"where-空判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where-空判断"}},[t._v("#")]),t._v(" where 空判断;")]),t._v(" "),s("ul",[s("li",[t._v("is null;")]),t._v(" "),s("li",[t._v("is not null;")])]),t._v(" "),s("h4",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),s("ul",[s("li",[t._v("order by name desc;")]),t._v(" "),s("li",[t._v("order by name desc,name2 asc;")]),t._v(" "),s("li",[t._v("默认升序 asc")])]),t._v(" "),s("h4",{attrs:{id:"条件分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件分支"}},[t._v("#")]),t._v(" 条件分支")]),t._v(" "),s("p",[t._v("case when ... then .. else ... end as ....")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"老同学"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"年轻"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小同学"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" age_level\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" name\n")])])]),s("h4",{attrs:{id:"分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),s("ul",[s("li",[t._v("limit 0,3 第一次参数位置，第二个条数")]),t._v(" "),s("li",[t._v("limit (n-1)*m,m 分页")])]),t._v(" "),s("h4",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("ul",[s("li",[t._v("Date()")]),t._v(" "),s("li",[t._v("UPPER()")]),t._v(" "),s("li",[t._v("LOWER()")])]),t._v(" "),s("h4",{attrs:{id:"聚合函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[t._v("#")]),t._v(" 聚合函数")]),t._v(" "),s("p",[t._v("聚合函数不对空值进行统计")]),t._v(" "),s("ul",[s("li",[t._v("count() select count(id) from student; 统计个数")]),t._v(" "),s("li",[t._v("max() select max(id) from student; 统计最大的 id 是")]),t._v(" "),s("li",[t._v("min() select min(id) from student; 统计最小的 id 是")]),t._v(" "),s("li",[t._v("sum() select sum(id) from student; 求和")]),t._v(" "),s("li",[t._v("avg() select avg(id) from student; 平均值")]),t._v(" "),s("li",[t._v("group_concat(name) select gender,group_concat(name) from student group by gender; 拼接数据")]),t._v(" "),s("li",[t._v("ifnull() select avg(ifull(id,0)) from student; 如果是空就加入统计默认值")])]),t._v(" "),s("h2",{attrs:{id:"条件查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[t._v("#")]),t._v(" 条件查询")]),t._v(" "),s("h3",{attrs:{id:"分组查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[t._v("#")]),t._v(" 分组查询")]),t._v(" "),s("p",[t._v("分组选择的字段必须要和分组的字段保持一致")]),t._v(" "),s("ul",[s("li",[t._v("having 对分组后的数据进行过滤 "),s("code",[t._v("sql SELECT department_name, SUM(salary) AS avg_salary FROM employees GROUP BY department_name HAVING SUM(salary) > (SELECT AVG(salary) FROM employees);")])]),t._v(" "),s("li",[t._v("select gender from student group by gender;")]),t._v(" "),s("li",[t._v("select gender,avg(age) from student group by gender; 配合聚合函数")]),t._v(" "),s("li",[t._v("with rollup 对分组后的数据进行统计 "),s("code",[t._v("SELECT name,SUM(signin) as signin_count FROM employee_tbl GROUP BY name WITH ROLLUP;")]),t._v(" 在基础之上统计")])]),t._v(" "),s("h3",{attrs:{id:"连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接查询"}},[t._v("#")]),t._v(" 连接查询")]),t._v(" "),s("h4",{attrs:{id:"内连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内连接"}},[t._v("#")]),t._v(" 内连接")]),t._v(" "),s("ul",[s("li",[t._v("INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。")]),t._v(" "),s("li",[t._v("LEFT JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。")]),t._v(" "),s("li",[t._v("RIGHT JOIN（右连接）： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v(" \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" classes "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" student"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" classes "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" student"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" classes "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" student"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"三大范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三大范式"}},[t._v("#")]),t._v(" 三大范式")]),t._v(" "),s("ul",[s("li",[t._v("第一范式(确保每列保持原子性)")]),t._v(" "),s("li",[t._v("第二范式(确保表中的每列都和主键相关)")]),t._v(" "),s("li",[t._v("第三范式(确保每列都和主键列直接相关,而不是间接相关)")])]),t._v(" "),s("h2",{attrs:{id:"事务四大特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务四大特性"}},[t._v("#")]),t._v(" 事务四大特性")]),t._v(" "),s("p",[t._v("1、原子性（Atomicity）\n　　原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，因此事务的操作如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响。")]),t._v(" "),s("p",[t._v("2、一致性（Consistency）\n　　一致性是指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态。")]),t._v(" "),s("p",[t._v("拿转账来说，假设用户 A 和用户 B 两者的钱加起来一共是 5000，那么不管 A 和 B 之间如何转账，转几次账，事务结束后两个用户的钱相加起来应该还得是 5000，这就是事务的一致性。")]),t._v(" "),s("p",[t._v("3、隔离性（Isolation）\n　　隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。")]),t._v(" "),s("p",[t._v("即要达到这么一种效果：对于任意两个并发的事务 T1 和 T2，在事务 T1 看来，T2 要么在 T1 开始之前就已经结束，要么在 T1 结束之后才开始，这样每个事务都感觉不到有其他事务在并发地执行。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("   MySQL标准的事务隔离级别包括：\n\n          1. 读未提交（read uncommitted）：一个事务还没提交时，它做的变更就能被别的事务看到。\n\n          2. 读已提交（read committed）：一个事务提交之后，它做的变更才会被其他事务看到（为什么有些产商会把隔离级别设置成这个？）。\n\n          3. 可重复读（repeatable read）：默认（为什么默认是这个？），一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。当然在可重复读隔离级别下，未提交变更对其他事务也是不可见的。\n\n          4. 串行化（serializable ）：对于同一行记录，“写”会加“写锁”，“读”会加“读锁”。当出现读写锁冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。\n\n   Oracle标准的事务隔离级别包括：\n\n          1. 读已提交（read committed）：默认隔离级别。\n\n          2. 串行化（serializable ）\n")])])]),s("p",[t._v("4、持久性（Durability）\n　　持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("例如我们在使用JDBC操作数据库时，在提交事务方法后，提示用户事务操作完成，当我们程序执行完成直到看到提示后，就可以认定事务已经正确提交，即使这时候数据库出现了问题，也必须要将我们的事务完全执行完成，否则就会造成我们看到提示事务处理完毕，但是数据库因为故障而没有执行事务的重大错误。\n")])])]),s("h2",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),s("p",[t._v("引擎要为 innerDB 的才可以支持事务，默认 innerDB,还有个 MySAM 不支持事务，但是访问速度快")]),t._v(" "),s("p",[t._v("修改手动提交 "),s("code",[t._v("set autocommit = 0;")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("手动开启；\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" classes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhans'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 提交操作\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("回滚操作\n\n\n")])])]),s("h2",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("p",[t._v("主要为了提高查询速度")]),t._v(" "),s("h3",{attrs:{id:"普通索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通索引"}},[t._v("#")]),t._v(" 普通索引")]),t._v(" "),s("ul",[s("li",[t._v("show inde from classes 查看表的索引")]),t._v(" "),s("li",[t._v("带有 Key 的就是索引标识")])]),t._v(" "),s("h3",{attrs:{id:"联合索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联合索引"}},[t._v("#")]),t._v(" 联合索引")]),t._v(" "),s("ul",[s("li",[t._v("最左原则")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("比如"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("创建了联合索引"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("左边的字段必须再"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("条件中，否则联合索引不起作用\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),t._v(" 起作用\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),t._v(" 不起作用\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),t._v(" 起作用\n\n")])])]),s("h3",{attrs:{id:"建索引的原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建索引的原则"}},[t._v("#")]),t._v(" 建索引的原则")]),t._v(" "),s("ul",[s("li",[t._v("不是越多越好，合理利用")]),t._v(" "),s("li",[t._v("不要对经常跟新的表做索引，对经常查询的字段做索引")]),t._v(" "),s("li",[t._v("数据量小不要建索引")]),t._v(" "),s("li",[t._v("字段相同值的时候不要建索引")])]),t._v(" "),s("h2",{attrs:{id:"函数-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数-2"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("ul",[s("li",[t._v("around(price,2) 保留两位小数")])])])}),[],!1,null,null,null);s.default=n.exports}}]);