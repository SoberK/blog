(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{316:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"基础使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础使用"}},[t._v("#")]),t._v(" 基础使用")]),t._v(" "),e("h2",{attrs:{id:"_1-创建一个store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建一个store"}},[t._v("#")]),t._v(" 1.创建一个store")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//store/index.ts\nimport { createPinia } from \"pinia\";\nimport type {App} from 'vue'\nconst store = createPinia();\n//创建一个store\n\n\n//导出让main.ts初始化\nexport function setupStore(app:App<Element>){\n    app.use(store)\n}\n\nexport {store}\n\n//main.ts\n....\nconst app = createApp()\nsetupStore(app)\n....\n\n")])])]),e("h2",{attrs:{id:"_2-创建一个模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建一个模块"}},[t._v("#")]),t._v(" 2.创建一个模块")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//store/modules/index.ts\nimport { defineStore } from \"pinia\";\ninterface IndexType {\n    name:string,\n    age:number\n}\n//初始化一个store\nexport const useIndexStore = defineStore({\n    id:'Index',\n    state:():IndexType=>({\n        name:'2',\n        age:33\n    })\n})\n")])])]),e("h2",{attrs:{id:"_3-在vue中使用state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-在vue中使用state"}},[t._v("#")]),t._v(" 3.在vue中使用state")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("食用个方法一:直接修改")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import {defineStore} from '@/store/modules'\nsetup(){\n\tconst store = defineStore()\n\tstore.counter++\n}\n")])])])]),t._v(" "),e("li",[e("p",[t._v("食用个方法二:重置store")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import {defineStore} from '@/store/modules'\nsetup(){\n\tconst store = defineStore()\n\tstore.$reset()\n}\n")])])])]),t._v(" "),e("li",[e("p",[t._v("食用个方法三:当作计算属性映射")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" setup(){\n    const store= useIndexStore();\n    store.age++\n    const cl = ()=>{\n      console.log(1)\n      store.age++\n    }\n \t\t//计算属性会更新视图\n    let newAge = computed(()=>{return store.age})\n    return {\n      newAge,\n      name:store.name,\n      age:store.age,\n      cl\n    }\n  }\n")])])])]),t._v(" "),e("li",[e("p",[t._v("食用个方法四:不在setup中使用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//提供了两种方法 mapstate和mapWritableState\ncomputed:{\n\t\t//创建可以读的state\n    ...mapState(useIndexStore,['name','age']),\n    //创建可以读的state\n    ...mapWritableState(useIndexStore,{\n      newAge:'age'\n    }),\n  },\n  methods:{\n    cl(){\n    //无效。给出警示\n      this.name=-1\n      //可以改变视图\n      this.newAge = -2\n    }\n  }\n\n")])])])]),t._v(" "),e("li",[e("p",[t._v("食用个方法五:通过$patch，$state修改方法")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//修改某个参数\nstore.$patch({name: '张三'})\n//整体修改\nstore.$state ={name:'2222',age:3333}\n")])])])]),t._v(" "),e("li",[e("p",[t._v("食用方法六：监听值的变化，detached此订阅将在组件卸载后保留")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(' store.$subscribe((mutation, state) => {\n \t\tconsole.log("a变化了" + a.value);\n },{ detached: true });\n')])])])])]),t._v(" "),e("h2",{attrs:{id:"_4-在vue中使用getters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-在vue中使用getters"}},[t._v("#")]),t._v(" 4.在vue中使用getters")]),t._v(" "),e("p",[t._v("没有什么好讲的和state类似，也和vuex的用法类似")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export const useStore = defineStore('main', {\n  state: () => ({\n    counter: 0,\n  }),\n  getters: {\n    doubleCount: (state) => state.counter * 2,\n  },\n})\n")])])]),e("ul",[e("li",[e("p",[t._v("使用方法一：当一个state获取")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" setup() {\n    const store = useStore()\n\n    return { store }\n  }\n")])])])]),t._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  getters: {\n    compA(state) { //直接通过state访问当前的state\n      return state.a * 3;\n    },\n    compB(): number { //通过this去访问state，但是必须要类型断言\n      return this.a * 3; \n    },\n  },\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"_5-actions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-actions"}},[t._v("#")]),t._v(" 5.actions")]),t._v(" "),e("p",[t._v("在pinia中actions中所有的方法既可以是异步的也可以是同步的，和vuex的actions有所区别，")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("$onAction 的使用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const unsubscribe = someStore.$onAction(\n  ({\n    name, // action 的名字\n    store, // store 实例\n    args, // 调用这个 action 的参数\n    after, // 在这个 action 执行完毕之后，执行这个函数\n    onError, // 在这个 action 抛出异常的时候，执行这个函数\n  }) => {})\n  \n   // 此订阅将在组件卸载后保留\n    someStore.$onAction(callback, true)\n")])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);