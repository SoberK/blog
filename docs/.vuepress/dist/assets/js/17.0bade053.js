(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{295:function(t,s,n){"use strict";n.r(s);var a=n(14),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"总汇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总汇"}},[t._v("#")]),t._v(" 总汇")]),t._v(" "),s("h4",{attrs:{id:"前端常用的设计模式有那些-并说明使用场景-javascript-设计模式系统讲解与应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端常用的设计模式有那些-并说明使用场景-javascript-设计模式系统讲解与应用"}},[t._v("#")]),t._v(" 前端常用的设计模式有那些？并说明使用场景（javascript 设计模式系统讲解与应用）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("设计原则")]),t._v(" "),s("ul",[s("li",[t._v("最重要的思想：开放封闭原则")]),t._v(" "),s("li",[t._v("对扩展开放")]),t._v(" "),s("li",[t._v("对修改封闭")])])]),t._v(" "),s("li",[s("p",[t._v("工厂模式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("用一个工厂函数，来创建实例，影藏new")])]),t._v(" "),s("li",[s("p",[t._v("如jq的$函数")])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code")])])])]),t._v(" "),s("p",[t._v("class Foo{}\nfunction factory(a,b,c){\nreturn new Foo();\n}\nconst f = factory(1,2,3)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("单列模式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("全局唯一的实例（无法生成第二个）")])]),t._v(" "),s("li",[s("p",[t._v("如vuex、redux、store")])]),t._v(" "),s("li",[s("p",[t._v("如全局唯一的dialog model")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("class SingleTon{\n    private static instance:SignleTon|null = null\n    private constructor(){}\n    public static getInstance(): SingleTon {\n        if(install){\n                return\tthis.instance \n        }\n         this.instance  = new SingleTon()\n         return this.instance\n    }\n    fn10(){}\n    fn20(){}\n}\nconst s = SingleTon.getInstance()\ns.fn1()\ns. fn2()\ncost s1 = SingleTon.getInstance()\nc=== c1 //false\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("代理模式")]),t._v(" "),s("ul",[s("li",[t._v("代理模式是一种结构型设计模式，它允许通过使用代理对象来控制对真实对象的访问。")]),t._v(" "),s("li",[t._v("代理模式的常见角色包括：\n"),s("ul",[s("li",[t._v("抽象主题")]),t._v(" "),s("li",[t._v("真实主题")]),t._v(" "),s("li",[t._v("代理")])])]),t._v(" "),s("li",[t._v("代理模式的使用场景和优势包括：\n"),s("ul",[s("li",[t._v("远程代理：当真实对象位于远程服务器上时，代理对象可以作为客户端和远程对象之间的中介，负责网络通信和数据传输。")]),t._v(" "),s("li",[t._v("虚拟代理：在需要创建昂贵或复杂对象时，代理对象可以作为真实对象的占位符，延迟真正的对象创建或初始化，提高系统的性能。")]),t._v(" "),s("li",[t._v("安全代理：代理对象可以在客户端访问真实对象之前进行权限验证，以控制对真实对象的访问。")]),t._v(" "),s("li",[t._v("缓存代理：代理对象可以在客户端访问真实对象之前检查缓存，如果缓存中已经存在所需的结果，则直接返回，减少不必要的计算或网络请求。")]),t._v(" "),s("li",[t._v("日志记录代理：代理对象可以在访问真实对象前后进行日志记录，用于调试、跟踪或监控系统的运行情况。")])])])])])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("观察者模式")]),t._v(" "),s("ul",[s("li",[t._v("观察者模式是一种一对多的关系，其中一个对象subject维护一组依赖于他的对象，并在状态变化的时候通知他们。观察者模式的核心是主题和观察者之间的解耦，是的主题可以独立的改变状态，而不需要知道观察者的存在。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 股票市场（主题）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StockMarket")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscribers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 观察者列表")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加观察者")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("observer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscribers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("observer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除观察者")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unsubscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("observer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscribers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscribers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("subscriber")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" subscriber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" observer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通知观察者")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("price")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscribers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("observer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" observer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟股票价格变化")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simulatePriceChange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 随机生成股票价格")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 股票交易者（观察者）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StockTrader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 观察者收到通知后的处理方法")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("price")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" 收到股票价格变化通知，当前股票价格为 ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("price"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建股票市场实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stockMarket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StockMarket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建股票交易者实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" trader1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StockTrader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Trader 1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" trader2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StockTrader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Trader 2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" trader3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StockTrader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Trader 3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 订阅股票市场的观察者")]),t._v("\nstockMarket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trader1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstockMarket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trader2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstockMarket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trader3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟股票价格变化并通知观察者")]),t._v("\nstockMarket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simulatePriceChange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出示例：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Trader 1 收到股票价格变化通知，当前股票价格为 54.986")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Trader 2 收到股票价格变化通知，当前股票价格为 54.986")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Trader 3 收到股票价格变化通知，当前股票价格为 54.986")]),t._v("\n\n")])])])]),t._v(" "),s("li",[s("p",[t._v("发布订阅模式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("发布订阅模式是一种更为灵活的消息传递模式。在发布订阅模式中，消息的发送者（发布者）和接收者（订阅者）之间没有直接的依赖关系，它们通过一个称为消息队列（或主题）的中间件进行通信。发布者将消息发布到消息队列中，而订阅者则从消息队列中订阅感兴趣的消息。发布订阅模式支持一对多的通信方式，允许多个订阅者同时接收同一条消息。")])]),t._v(" "),s("li",[s("p",[t._v("在发布订阅模式中，消息队列（或主题）起到了关键的作用。它充当了发布者和订阅者之间的中介，负责接收和分发消息。消息队列可以实现不同的分发策略，如广播（将消息发送给所有订阅者）或选择性分发（根据订阅者的兴趣选择性地发送消息）。发布者将消息发布到消息队列中，而订阅者通过订阅感兴趣的消息类型或主题来接收消息。")])]),t._v(" "),s("li",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code")])])])]),t._v(" "),s("p",[t._v("// 事件管理器（发布者）\nclass EventManager {\nconstructor() {\nthis.subscribers = {}; // 订阅者列表\n}")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("// 订阅事件\nsubscribe(event, callback) {\n  if (!this.subscribers[event]) {\n    this.subscribers[event] = [];\n  }\n  this.subscribers[event].push(callback);\n}\n\n// 取消订阅\nunsubscribe(event, callback) {\n  if (this.subscribers[event]) {\n    this.subscribers[event] = this.subscribers[event].filter(subscriber => subscriber !== callback);\n  }\n}\n\n// 发布事件\npublish(event, data) {\n  if (this.subscribers[event]) {\n    this.subscribers[event].forEach(callback => callback(data));\n  }\n}\n")])])]),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("// 创建事件管理器实例\nconst eventManager = new EventManager();")]),t._v(" "),s("p",[t._v('// 订阅者\nfunction subscriber1(data) {\nconsole.log("Subscriber 1:", data);\n}')]),t._v(" "),s("p",[t._v('function subscriber2(data) {\nconsole.log("Subscriber 2:", data);\n}')]),t._v(" "),s("p",[t._v('// 订阅事件\neventManager.subscribe("event1", subscriber1);\neventManager.subscribe("event2", subscriber2);')]),t._v(" "),s("p",[t._v('// 发布事件\neventManager.publish("event1", "Hello");\neventManager.publish("event2", "World");')]),t._v(" "),s("p",[t._v("// 输出示例：\n// Subscriber 1: Hello\n// Subscriber 2: World")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("适配器模式")]),t._v(" "),s("ul",[s("li",[t._v("适配器模式是一种结构型设计模式，用于将一个类的接口转换成客户端所期望的另一个接口。")]),t._v(" "),s("li",[t._v("三个角色\n"),s("ul",[s("li",[t._v("目标接口")]),t._v(" "),s("li",[t._v("适配器")]),t._v(" "),s("li",[t._v("适配者")])])]),t._v(" "),s("li",[t._v("优点：\n"),s("ul",[s("li",[t._v("集成旧系统‘")]),t._v(" "),s("li",[t._v("兼容性转换")]),t._v(" "),s("li",[t._v("接口转换")])])])])]),t._v(" "),s("li",[s("p",[t._v("装饰器模式")]),t._v(" "),s("ul",[s("li",[t._v("装饰器模式是一种结构型设计模式，它允许在不改变现有对象结构的情况下，动态地将新功能附加到对象上。装饰器模式通过创建一个包装器对象，将原始对象包装在内，从而在运行时扩展对象的功能。继承就是一个很好的案例")]),t._v(" "),s("li")])]),t._v(" "),s("li",[s("p",[t._v("策略模式")]),t._v(" "),s("p",[t._v("obj[a]   代替  if(a....) else if(b.....)")])]),t._v(" "),s("li",[s("p",[t._v("迭代器模式")])])]),t._v(" "),s("h3",{attrs:{id:"_4、观察者模式和发布订阅模式之间的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、观察者模式和发布订阅模式之间的区别"}},[t._v("#")]),t._v(" 4、观察者模式和发布订阅模式之间的区别")]),t._v(" "),s("p",[t._v("![image-20220712144315734](/Users/fanrongkong/Library/Application Support/typora-user-images/image-20220712144315734.png)")]),t._v(" "),s("ul",[s("li",[t._v("观察者模式\n"),s("ul",[s("li",[t._v("Subject 和Observer 直接绑定，没有中间媒介")]),t._v(" "),s("li",[t._v("如addeventListener")])])]),t._v(" "),s("li",[t._v("发布订阅\n"),s("ul",[s("li",[t._v("是publish和observer 互不相识，需要中间媒介")]),t._v(" "),s("li",[t._v("如eventBus")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);