(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{281:function(t,s,a){t.exports=a.p+"assets/img/image-2.56046193.png"},370:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_10-你了解diff算法吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-你了解diff算法吗"}},[t._v("#")]),t._v(" 10.你了解diff算法吗？")]),t._v(" "),s("p",[t._v("1.vue中的diff算法称为patching算法，它由Snabbdom修改而来，虛拟DOM要想转化为真实DOM就需要通过patch方法转换。")]),t._v(" "),s("p",[t._v("2.vue中diff执行的时刻是组件内响应式数据变更触发实例执行其更新函数时，更新函数会再次执行render函数获得最新的虛拟DOM，然后执行patch函数，并传入新旧两次虛拟DOM，通过比对两者找到变化的地方，最后将其转化为对应的DOM操作。")]),t._v(" "),s("p",[s("strong",[t._v("diff 分为三类比较：")])]),t._v(" "),s("p",[t._v("1.相同类型节点比较：只会对属性进行重设，从而实现节点的转变")]),t._v(" "),s("p",[t._v("2.不同类型节点比较：会直接删除旧的节点，创建新的节点代替。")]),t._v(" "),s("p",[t._v("3.列表节点比较：开发手动添加key,帮助react定位到正确的节点，减少dom操作次数。")]),t._v(" "),s("p",[t._v("1.虛拟dom顾名思义就是虛拟的dom对象，它本身就是一个Javascript对象，只不过它是通过不同的属性去描述一个视图结构。\n"),s("img",{attrs:{src:a(281)}})])])}),[],!1,null,null,null);s.default=n.exports}}]);