(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{384:function(t,e,r){"use strict";r.r(e);var s=r(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"_37-你是怎么处理vue项目中的错误的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_37-你是怎么处理vue项目中的错误的"}},[t._v("#")]),t._v(" 37.你是怎么处理vue项目中的错误的")]),t._v(" "),e("ol",[e("li",[t._v('应用中的错误类型分为”接口异常"和“代码逻辑异常”')]),t._v(" "),e("li",[t._v("我们需要根据不同错误类型做相应处理： 接口异常 是我们请求后端接口过程中发生的异常，可能是请求失败，也可能是请求获得了服务器响应，但是返回的是错误状态。以 Axios 为例，这类异常我们可以通过封装 Axios， 在拦截器中统一处理整个应用中请求的错误。代码逻辑异常 是我们编写的前端代码中存在逻辑上的错误造成的异常，vue 应用中最常见的方式是使用全局错误处理函数app.config.errorHandler 收集错误。")]),t._v(" "),e("li",[t._v("收集到错误之后，需要统一处理这些异常：分析错误，获取需要错误信息和数据。这里应该有效区分错误类型，如果是请求错误，需要上报接口信息，参数，状态码等：对于前端逻辑异常，获取错误名称和详情即可。另外还可以收集应用名称汇环境、版本、用广信息，所在页面等。这些信息可以通过 vuex 存储的全局状态和路由信息获取。")])])])}),[],!1,null,null,null);e.default=n.exports}}]);