(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{346:function(t,a,s){"use strict";s.r(a);var n=s(14),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css-篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-篇"}},[t._v("#")]),t._v(" css 篇")]),t._v(" "),a("h2",{attrs:{id:"css-盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-盒模型"}},[t._v("#")]),t._v(" css 盒模型")]),t._v(" "),a("p",[t._v("简介：就是用来装页面上的元素的矩形区域。CSS 中的盒子模型包括 IE 盒子模型和标准的 W3C 盒子模型。")]),t._v(" "),a("p",[t._v("border-sizing(有 3 个值哦)：border-box,padding-box,content-box.")]),t._v(" "),a("ul",[a("li",[t._v("标准盒子模型：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/10/1648419a623a69db~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp",alt:"2018-07-10 4 24 03"}})]),t._v(" "),a("ul",[a("li",[t._v("IE 盒子模型：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/10/1648419a6d29fa5e~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp",alt:"2018-07-10 4 24 12"}})]),t._v(" "),a("p",[t._v("区别：从图中我们可以看出，这两种盒子模型最主要的区别就是 width 的包含范围，在标准的盒子模型中，width 指 content 部分的宽度，在 IE 盒子模型中，width 表示 content+padding+border 这三个部分的宽度，故这使得在计算整个盒子的宽度时存在着差异：")]),t._v(" "),a("p",[t._v("标准盒子模型的盒子宽度：左右 border+左右 padding+width IE 盒子模型的盒子宽度：width")]),t._v(" "),a("p",[t._v("在 CSS3 中引入了 box-sizing 属性，box-sizing:content-box;表示标准的盒子模型，box-sizing:border-box 表示的是 IE 盒子模型")]),t._v(" "),a("p",[t._v("最后，前面我们还提到了，box-sizing:padding-box,这个属性值的宽度包含了左右 padding+width")]),t._v(" "),a("p",[t._v("也很好理解性记忆，包含什么，width 就从什么开始算起。")]),t._v(" "),a("h2",{attrs:{id:"画一条-0-5px-的线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画一条-0-5px-的线"}},[t._v("#")]),t._v(" 画一条 0.5px 的线")]),t._v(" "),a("ul",[a("li",[t._v("采用 meta viewport 的方式")]),t._v(" "),a("li",[t._v("采用 border-image 的方式")]),t._v(" "),a("li",[t._v("采用 transform: scale()的方式")])]),t._v(" "),a("h2",{attrs:{id:"link-标签和-import-标签的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link-标签和-import-标签的区别"}},[t._v("#")]),t._v(" link 标签和 import 标签的区别")]),t._v(" "),a("ul",[a("li",[t._v("link 属于 html 标签，而@import 是 css 提供的")]),t._v(" "),a("li",[t._v("页面被加载时，link 会同时被加载，而@import 引用的 css 会等到页面加载结束后加载。")]),t._v(" "),a("li",[t._v("link 是 html 标签，因此没有兼容性，而@import 只有 IE5 以上才能识别。")]),t._v(" "),a("li",[t._v("link 方式样式的权重高于@import 的。")])]),t._v(" "),a("h2",{attrs:{id:"transition-和-animation-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transition-和-animation-的区别"}},[t._v("#")]),t._v(" transition 和 animation 的区别")]),t._v(" "),a("p",[t._v("Animation 和 transition 大部分属性是相同的，他们都是随时间改变元素的属性值，他们的主要区别是 transition 需要触发一个事件才能改变属性，而 animation 不需要触发任何事件的情况下才会随时间改变属性值，并且 transition 为 2 帧，从 from .... to，而 animation 可以一帧一帧的。")]),t._v(" "),a("h2",{attrs:{id:"flex-布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-布局"}},[t._v("#")]),t._v(" Flex 布局")]),t._v(" "),a("p",[t._v("文章链接： "),a("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2015%2F07%2Fflex-grammar.html%3Futm_source%3Dtuicool%25EF%25BC%2588%25E8%25AF%25AD%25E6%25B3%2595%25E7%25AF%2587%25EF%25BC%2589",title:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool%EF%BC%88%E8%AF%AD%E6%B3%95%E7%AF%87%EF%BC%89",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.ruanyifeng.com/blog/2015/0…"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2015%2F07%2Fflex-examples.html%25EF%25BC%2588%25E5%25AE%259E%25E4%25BE%258B%25E7%25AF%2587%25EF%25BC%2589",title:"http://www.ruanyifeng.com/blog/2015/07/flex-examples.html%EF%BC%88%E5%AE%9E%E4%BE%8B%E7%AF%87%EF%BC%89",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.ruanyifeng.com/blog/2015/0…"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v('Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。 布局的传统解决方案，基于盒状模型，依赖 display 属性 + position 属性 + float 属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。')]),t._v(" "),a("p",[t._v("简单的分为容器属性和元素属性 容器的属性：")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction：决定主轴的方向（即子 item 的排列方法） .box { flex-direction: row | row-reverse | column | column-reverse; }")]),t._v(" "),a("li",[t._v("flex-wrap：决定换行规则 .box{ flex-wrap: nowrap | wrap | wrap-reverse; }")]),t._v(" "),a("li",[t._v("flex-flow： .box { flex-flow: || ; }")]),t._v(" "),a("li",[t._v("justify-content：对其方式，水平主轴对齐方式")]),t._v(" "),a("li",[t._v("align-items：对齐方式，竖直轴线方向")])]),t._v(" "),a("p",[t._v("项目的属性（元素的属性）：")]),t._v(" "),a("ul",[a("li",[t._v("order 属性：定义项目的排列顺序，顺序越小，排列越靠前，默认为 0")]),t._v(" "),a("li",[t._v("flex-grow 属性：定义项目的放大比例，即使存在空间，也不会放大")]),t._v(" "),a("li",[t._v("flex-shrink 属性：定义了项目的缩小比例，当空间不足的情况下会等比例的缩小，如果定义个 item 的 flow-shrink 为 0，则为不缩小")]),t._v(" "),a("li",[t._v("flex-basis 属性：定义了在分配多余的空间，项目占据的空间。")]),t._v(" "),a("li",[t._v("flex：是 flex-grow 和 flex-shrink、flex-basis 的简写，默认值为 0 1 auto。")]),t._v(" "),a("li",[t._v("align-self：允许单个项目与其他项目不一样的对齐方式，可以覆盖 align-items，默认属性为 auto，表示继承父元素的 align-items")])]),t._v(" "),a("p",[t._v("比如说，用 flex 实现圣杯布局")]),t._v(" "),a("h2",{attrs:{id:"垂直居中的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垂直居中的方法"}},[t._v("#")]),t._v(" 垂直居中的方法")]),t._v(" "),a("h3",{attrs:{id:"_1-margin-auto-法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-margin-auto-法"}},[t._v("#")]),t._v(" (1)margin:auto 法")]),t._v(" "),a("p",[t._v("css:")]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v("div{ width: 400px; height: 400px; position: relative; border: 1px solid #465468; } img{ position: absolute; margin: auto; top: 0; left: 0; right: 0; bottom: 0; }")])]),t._v(" "),a("p",[t._v("html:")]),t._v(" "),a("p",[t._v("xml")]),t._v(" "),a("p",[t._v("`")]),a("div",[a("img",{attrs:{src:"mm.jpg"}}),a("p")]),t._v("`\n"),a("p",[t._v("定位为上下左右为 0，margin：0 可以实现脱离文档流的居中.")]),t._v(" "),a("h3",{attrs:{id:"_2-margin-负值法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-margin-负值法"}},[t._v("#")]),t._v(" (2)margin 负值法")]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v(".container{ width: 500px; height: 400px; border: 2px solid #379; position: relative; } .inner{ width: 480px; height: 380px; background-color: #746; position: absolute; top: 50%; left: 50%; margin-top: -190px; /*height的一半*/ margin-left: -240px; /*width的一半*/ }")])]),t._v(" "),a("p",[t._v("补充：其实这里也可以将 marin-top 和 margin-left 负值替换成， transform：translateX(-50%)和 transform：translateY(-50%)")]),t._v(" "),a("h3",{attrs:{id:"_3-table-cell-未脱离文档流的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-table-cell-未脱离文档流的"}},[t._v("#")]),t._v(" (3)table-cell（未脱离文档流的）")]),t._v(" "),a("p",[t._v("设置父元素的 display:table-cell,并且 vertical-align:middle，这样子元素可以实现垂直居中。")]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v("css: div{ width: 300px; height: 300px; border: 3px solid #555; display: table-cell; vertical-align: middle; text-align: center; } img{ vertical-align: middle; }")])]),t._v(" "),a("h3",{attrs:{id:"_4-利用-flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-利用-flex"}},[t._v("#")]),t._v(" (4)利用 flex")]),t._v(" "),a("p",[t._v("将父元素设置为 display:flex，并且设置 align-items:center;justify-content:center;")]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v("css: .container{ width: 300px; height: 200px; border: 3px solid #546461; display: -webkit-flex; display: flex; -webkit-align-items: center; align-items: center; -webkit-justify-content: center; justify-content: center; } .inner{ border: 3px solid #458761; padding: 20px; }")])]),t._v(" "),a("h2",{attrs:{id:"关于-js-动画和-css3-动画的差异性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-js-动画和-css3-动画的差异性"}},[t._v("#")]),t._v(" 关于 js 动画和 css3 动画的差异性")]),t._v(" "),a("p",[t._v("渲染线程分为 main thread 和 compositor thread，如果 css 动画只改变 transform 和 opacity，这时整个 CSS 动画得以在 compositor trhead 完成（而 js 动画则会在 main thread 执行，然后出发 compositor thread 进行下一步操作），特别注意的是如果改变 transform 和 opacity 是不会 layout 或者 paint 的。 区别：")]),t._v(" "),a("ul",[a("li",[t._v("功能涵盖面，js 比 css 大")]),t._v(" "),a("li",[t._v("实现/重构难度不一，CSS3 比 js 更加简单，性能跳优方向固定")]),t._v(" "),a("li",[t._v("对帧速表现不好的低版本浏览器，css3 可以做到自然降级")]),t._v(" "),a("li",[t._v("css 动画有天然事件支持")]),t._v(" "),a("li",[t._v("css3 有兼容性问题")])]),t._v(" "),a("h2",{attrs:{id:"块元素和行元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块元素和行元素"}},[t._v("#")]),t._v(" 块元素和行元素")]),t._v(" "),a("p",[t._v("块元素：独占一行，并且有自动填满父元素，可以设置 margin 和 pading 以及高度和宽度 行元素：不会独占一行，width 和 height 会失效，并且在垂直方向的 padding 和 margin 会失 效。")]),t._v(" "),a("h2",{attrs:{id:"多行元素的文本省略号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行元素的文本省略号"}},[t._v("#")]),t._v(" 多行元素的文本省略号")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("webkit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("box\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-box-orient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("vertical\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-web-line-clamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hidden\n")])])]),a("h2",{attrs:{id:"visibility-hidden-opacity-0-display-none"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visibility-hidden-opacity-0-display-none"}},[t._v("#")]),t._v(" visibility=hidden, opacity=0，display:none")]),t._v(" "),a("p",[t._v("opacity=0，该元素隐藏起来了，但不会改变页面布局，并且，如果该元素已经绑定一些事件，如 click 事件，那么点击该区域，也能触发点击事件的\nvisibility=hidden，该元素隐藏起来了，但不会改变页面布局，但是不会触发该元素已经绑定的事件\ndisplay=none，把元素隐藏起来，并且会改变页面布局，可以理解成在页面中把该元素删除掉一样。")]),t._v(" "),a("h2",{attrs:{id:"双边距重叠问题-外边距折叠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双边距重叠问题-外边距折叠"}},[t._v("#")]),t._v(" 双边距重叠问题（外边距折叠）")]),t._v(" "),a("p",[t._v("多个相邻（兄弟或者父子关系）普通流的块元素垂直方向 marigin 会重叠")]),t._v(" "),a("p",[t._v("折叠的结果为：")]),t._v(" "),a("p",[t._v("两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。 两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。 两个外边距一正一负时，折叠结果是两者的相加的和。")]),t._v(" "),a("h2",{attrs:{id:"三栏布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三栏布局"}},[t._v("#")]),t._v(" 三栏布局")]),t._v(" "),a("p",[t._v("三栏布局是很常见的一种页面布局方式。左右固定，中间自适应。实现方式有很多种方法。")]),t._v(" "),a("p",[a("strong",[t._v("第一种：flex")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("left"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("main"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("right"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n.container{ display: flex; } .left{ flex-basis:200px; background: green; }\n.main{ flex: 1; background: red; } .right{ flex-basis:200px; background: green;\n}\n")])])]),a("p",[a("strong",[t._v("第二种：position + margin")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("left"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("right"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("main"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\nbody,html{ padding: 0; margin: 0; } .left,.right{ position: absolute; top: 0;\nbackground: red; } .left{ left: 0; width: 200px; } .right{ right: 0; width:\n200px; } .main{ margin: 0 200px ; background: green; }\n")])])]),a("p",[a("strong",[t._v("第三种：float + margin")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("left"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("right"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("main"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\nbody,html{ padding:0; margin: 0; } .left{ float:left; width:200px;\nbackground:red; } .main{ margin:0 200px; background: green; }\n.right{float:right; width:200px; background:red; }\n")])])]),a("h2",{attrs:{id:"css-权重计算方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-权重计算方式"}},[t._v("#")]),t._v(" CSS 权重计算方式")]),t._v(" "),a("p",[t._v("CSS 基本选择器包含 ID 选择器、类选择器、标签选择器、通配符选择器。 正常情况下，一般都能答出"),a("code",[t._v("!important > 行内样式 > ID选择器 > 类选择器 > 标签选择器 > 通配符选择器")]),t._v("。")]),t._v(" "),a("p",[t._v("但如果这几种选择器同时作用于一个元素时，该元素最后应用哪个样式呢？这就涉及到权重计算的问题。 关于权重计算，有两种不同的计算方式：一种是以二进制的规则计算，一种是以 1,10,100,1000 这种的计算方式。我更倾向于二进制的这种方式。")]),t._v(" "),a("p",[a("strong",[t._v("各选择器权值：")])]),t._v(" "),a("ul",[a("li",[t._v("内联样式，权值为 1000")]),t._v(" "),a("li",[t._v("ID 选择器，权值为 0100")]),t._v(" "),a("li",[t._v("类，伪类和属性选择器，权值为 0010")]),t._v(" "),a("li",[t._v("标签选择器和伪元素选择器，权值为 0001")]),t._v(" "),a("li",[t._v("通配符、子选择器、相邻选择器等，权值为 0000")]),t._v(" "),a("li",[t._v("继承的样式没有权值")])]),t._v(" "),a("p",[a("strong",[t._v("比较方式：")])]),t._v(" "),a("p",[t._v("如果层级相同，继续往后比较，如果层级不同，层级高的权重大，不论低层级有多少个选择器。")]),t._v(" "),a("h2",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),a("p",[t._v("浏览器渲染的问题：")]),t._v(" "),a("ul",[a("li",[t._v("父子关系，可能会"),a("strong",[t._v("margin 坍塌")])]),t._v(" "),a("li",[t._v("父子关系，父元素无视浮动元素会产生"),a("strong",[t._v("高度坍塌")]),t._v("（比如子元素浮动，父元素的高度就变小了）")]),t._v(" "),a("li",[t._v("兄弟关系，正常元素可能会被"),a("strong",[t._v("浮动元素覆盖")])])]),t._v(" "),a("p",[t._v("为了解决这些问题：\nBFC 的全称为 "),a("code",[t._v("Block Formatting Context")]),t._v("，也就是块级格式化上下文的意思。开启后是一个独立的空间，隔绝了与外部的联系，内部不会影响外部，互不影响")]),t._v(" "),a("p",[a("strong",[t._v("以下方式都会创建 BFC：")])]),t._v(" "),a("ul",[a("li",[t._v("根元素(html)")]),t._v(" "),a("li",[t._v("浮动元素 "),a("strong",[t._v("（元素的 float 不是 none）")])]),t._v(" "),a("li",[t._v("绝对定位元素 "),a("strong",[t._v("（元素的 position 为 absolute 或 fixed）")])]),t._v(" "),a("li",[t._v("overflow 值不为 "),a("strong",[t._v("visible")]),t._v(" 的块元素")]),t._v(" "),a("li",[t._v("行内块元素 "),a("strong",[t._v("（元素的 display 为 inline-block、table-cell、flow-root）")])]),t._v(" "),a("li",[t._v("表格标题（元素的 display 为 table-caption，HTML 表格标题默认为该值）")]),t._v(" "),a("li",[t._v("contain 值为 layout、content 或 paint 的元素")]),t._v(" "),a("li",[t._v("弹性元素（display 为 flex 或 inline-flex 元素的直接子元素）")]),t._v(" "),a("li",[t._v("网格元素（display 为 grid 或 inline-grid 元素的直接子元素）")]),t._v(" "),a("li",[t._v("多列容器（元素的 column-count 或 column-width 不为 auto，包括 column-count 为 1） column-span 为 all 的元素始终会创建一个新的 BFC，即使该元素没有包裹在一个多列容器中（标准变更，Chrome bug）。")]),t._v(" "),a("li",[t._v("匿名表格单元格元素（元素的 display 为 table、table-row、table-row-group、table-header-group、table-footer-group（分别是 HTML table、row、tbody、thead、tfoot 的默认属性）或 inline-table）")])]),t._v(" "),a("p",[a("strong",[t._v("BFC 布局规则：")])]),t._v(" "),a("ol",[a("li",[t._v("内部的 box 会在垂直方向，一个接一个的放置。")]),t._v(" "),a("li",[t._v("box 垂直方向的距离有 margin 决定。属于同一个 BFC 的两个相邻 box 的 margin 会发生重叠。")]),t._v(" "),a("li",[t._v("每个元素的左外边距与包含块的左边界相接触，即使浮动元素也是如此。")]),t._v(" "),a("li",[t._v("BFC 的区域不会与 float 的元素区域重叠。")]),t._v(" "),a("li",[t._v("计算 BFC 的高度时，浮动子元素也参与计算。")]),t._v(" "),a("li",[t._v("BFC 就是页面上一个隔离的独立容器，容器里面的子元素不会影响到外面的元素，反之亦然。")])]),t._v(" "),a("h2",{attrs:{id:"如何实现一个自适应的正方形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何实现一个自适应的正方形"}},[t._v("#")]),t._v(" 如何实现一个自适应的正方形")]),t._v(" "),a("p",[a("strong",[t._v("方法 1：利用 CSS3 的 vw 单位")])]),t._v(" "),a("p",[a("code",[t._v("vw")]),t._v(" 会把视口的宽度平均分为 100 份")]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v(".square { width: 10vw; height: 10vw; background: red; }")])]),t._v(" "),a("p",[a("strong",[t._v("方法 2：利用 margin 或者 padding 的百分比计算是参照父元素的 width 属性")])]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v(".square { width: 10%; padding-bottom: 10%; height: 0; // 防止内容撑开多余的高度 background: red; }")])]),t._v(" "),a("h2",{attrs:{id:"如何用-css-实现一个三角形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何用-css-实现一个三角形"}},[t._v("#")]),t._v(" 如何用 css 实现一个三角形")]),t._v(" "),a("p",[a("strong",[t._v("方法 1： 利用 border 属性")])]),t._v(" "),a("p",[t._v("利用盒模型的 "),a("code",[t._v("border")]),t._v(" 属性上下左右边框交界处会呈现出平滑的斜线这个特点，通过设置不同的上下左右边框宽度或者颜色即可得到三角形或者梯形。")]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v(".triangle { height:0; width:0; border-color:red blue green pink; border-style:solid; border-width:30px; }")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/10/13/16dc5881277c896c~tplv-t2oaga2asx-zoom-in-crop-mark:1512:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[t._v("如果想实现其中的任一个三角形，把其他方向上的 "),a("code",[t._v("border-color")]),t._v(" 都设置成透明即可。")]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v(".triangle { height:0; width:0; border-color:red transparent transparent transparent; border-style:solid; border-width:30px; }")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/10/13/16dc58ad2033b4be~tplv-t2oaga2asx-zoom-in-crop-mark:1512:0:0:0.awebp",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("方法二： 利用 CSS3 的 clip-path 属性")])]),t._v(" "),a("p",[t._v("不了解 "),a("code",[t._v("clip-path")]),t._v(" 属性的可以先看看 "),a("code",[t._v("MDN")]),t._v(" 上的介绍："),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fclip-path",title:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/clip-path",target:"_blank",rel:"noopener noreferrer"}},[t._v("chip-path"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("css")]),t._v(" "),a("p",[a("code",[t._v(".triangle { width: 30px; height: 30px; background: red; clip-path: polygon(0px 0px, 0px 30px, 30px 0px); // 将坐标(0,0),(0,30),(30,0)连成一个三角形 transform: rotate(225deg); // 旋转225，变成下三角 }")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/10/13/16dc594b5da448fc~tplv-t2oaga2asx-zoom-in-crop-mark:1512:0:0:0.awebp",alt:""}})])])}),[],!1,null,null,null);a.default=r.exports}}]);