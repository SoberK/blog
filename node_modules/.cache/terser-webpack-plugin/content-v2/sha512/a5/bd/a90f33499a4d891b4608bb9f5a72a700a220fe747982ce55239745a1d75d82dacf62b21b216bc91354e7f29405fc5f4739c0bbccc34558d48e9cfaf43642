{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{355:function(t,i,o){\"use strict\";o.r(i);var a=o(14),n=Object(a.a)({},(function(){var t=this,i=t._self._c;return i(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[i(\"h3\",{attrs:{id:\"_38-mutation和action的区别\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_38-mutation和action的区别\"}},[t._v(\"#\")]),t._v(\" 38.mutation和action的区别\")]),t._v(\" \"),i(\"ul\",[i(\"li\",[t._v(\"给出两者概念说明的区别\")]),t._v(\" \"),i(\"li\",[t._v(\"举例说明应用场景\")]),t._v(\" \"),i(\"li\",[t._v(\"使用细节不通\")]),t._v(\" \"),i(\"li\",[t._v(\"简单阐述时间上的差异\")])]),t._v(\" \"),i(\"p\",[t._v(\"1.官方文档说：更改Vuex 的store 中的状态的唯一方法是提交mutation’，mutation非常类似于事件：每个mutation、都有一个字符串的类型 (type）\"),i(\"em\",[t._v(\"和一个\")]),t._v(\"回调函数(handler)。Action°类似于mutation，不同在于：action可以包含任意异步操作，但它不能修改快态，需要提交 mutation‘才能变更状态\")]),t._v(\" \"),i(\"p\",[t._v(\"2.因此，开发时，包含异步操作或者复杂业务组合时使用action;需要直接修改状态则提交mutation。但由于dispatch和commit是两个AP，容易引起混淆，实践中也会采用统一使用dispatch action的方式。\")]),t._v(\" \"),i(\"p\",[t._v(\"3.\\ufeff\\ufeff\\ufeff调用dispatch和commit两个AP时几乎完全一样，但是定义两者时却不甚相同，mutation的回调函数接收参数是state对象。action则是与Store实例具有相同方法和属性的上下文context对象，因此一般会解构它为{commit, dispatch, state}，从而方便编码。另外dispatch会返回Promise实例便于处理内部异步结果。\")]),t._v(\" \"),i(\"p\",[t._v(\"4.\\ufeff\\ufeff\\ufeff实现上committtype)方法相当于调options.mutationsttypeJ(state）；dispatch(type）、方法相当于调用 options.actionsttvpe ](store）、，这样就很容易理解两者使用上的不同了。\")])])}),[],!1,null,null,null);i.default=n.exports}}]);","extractedComments":[]}