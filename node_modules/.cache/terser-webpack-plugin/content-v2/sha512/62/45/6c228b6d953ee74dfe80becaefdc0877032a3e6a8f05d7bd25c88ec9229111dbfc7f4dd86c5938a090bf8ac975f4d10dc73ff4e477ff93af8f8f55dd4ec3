{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{366:function(t,e,a){\"use strict\";a.r(e);var s=a(14),i=Object(s.a)({},(function(){var t=this,e=t._self._c;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h3\",{attrs:{id:\"_48-你觉得vuex有什么缺点\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_48-你觉得vuex有什么缺点\"}},[t._v(\"#\")]),t._v(\" 48.你觉得vuex有什么缺点\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[t._v(\"先跨再贬\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"使用感受\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"解决方案\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"vex利用响应式，使用起来已经相当方便快捷了。但是在使用过程中感觉模块化这一块做的过于复杂，用的时候容易出错，还要经常查看文档\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"比如：访问state时要带上模块key，内嵌模块的话会很长，不得不配合mapstate使用，加不加namespaced区别也很大，getters, mutations, actions这些默认是全局，加上之后必须用字符串类型的path来匹配，使用模式不统一，容易出错：对ts的支持也不友好，在使用模块时没有代码提示。\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"之前Vue2项目中用过vuex module-decorators的解决方案，虽然类型支持上有所改善，但又要学一套新东西，增加了学习成本。pinia出现之后使用体验好了很多，vue3+ pinia会是更好的组合。\")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);","extractedComments":[]}