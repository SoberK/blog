{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{343:function(t,e,s){\"use strict\";s.r(e);var r=s(14),i=Object(r.a)({},(function(){var t=this,e=t._self._c;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h3\",{attrs:{id:\"_27-怎么实现路由懒加载\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_27-怎么实现路由懒加载\"}},[t._v(\"#\")]),t._v(\" 27.怎么实现路由懒加载\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"当打包构建应用时，JavaScript 包会变得非常大，影响页面加载。利用路由懒加载我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样会更加高效，是一种优化手段。\")]),t._v(\" \"),e(\"li\",[t._v(\"一般来说，对所有的路由都使用动态导入是个好主意。\")]),t._v(\" \"),e(\"li\",[t._v(\"给component 选项配置一个返回 Promise 组件的函数就可以定义懒加载路由。例如：\\n{ path: \\\" /users/ :id', component: （) => import(' /views/UserDetails\\\" )}\")]),t._v(\" \"),e(\"li\",[t._v('结合注释 （）= import( /* webpackChunkName: \"group-user\" */ \" ./UserDetails.vue\"）、可以做 webpack代码分块 vite 中结合rollupOptions定义分块,这样可以配合webpack把')]),t._v(\" \"),e(\"li\",[t._v(\"路由中不能使用异步组件\")])])])}),[],!1,null,null,null);e.default=i.exports}}]);","extractedComments":[]}