{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{362:function(t,o,a){\"use strict\";a.r(o);var d=a(14),s=Object(d.a)({},(function(){var t=this,o=t._self._c;return o(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[o(\"h3\",{attrs:{id:\"_9-虚拟dom\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_9-虚拟dom\"}},[t._v(\"#\")]),t._v(\" 9.虚拟dom\")]),t._v(\" \"),o(\"p\",[t._v(\"1.虛拟dom顾名思义就是虛拟的dom对象，它本身就是一个Javascript对象，只不过它是通过不同的属性去描述一个视图结构。\")]),t._v(\" \"),o(\"ol\",{attrs:{start:\"2\"}},[o(\"li\",[t._v(\"通过引入vdom我们可以获得如下好处：\\n将真实元素节点抽象成 VNode， 有效减少直接操作 dom 次数，从而提高程序性能\")])]),t._v(\" \"),o(\"ul\",[o(\"li\",[t._v(\"直接操作dom 是有限制的，比如：diff、clone 等操作，一个真实元素上有许多的内容，如果直接对其进行diff 操作，会去额外 diff 一些没有必要的内容；同样的，如果需要进行 clone 那么需要将其全部内容进行复制，这也是没必要的。但是，如果将这些操作转移到 JavaScript 对象上，那么就会变得简单了。\")]),t._v(\" \"),o(\"li\",[t._v(\"操作 dom 是比较昂贵的操作，频繁的dom操作容易引起页面的重绘和回流，但是通过抽象 VNode 进行中间处理，可以有效减少直接操作dom的次数，从而减少页面重绘和回流。\")])])])}),[],!1,null,null,null);o.default=s.exports}}]);","extractedComments":[]}